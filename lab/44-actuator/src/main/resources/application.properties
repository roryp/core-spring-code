spring.jpa.hibernate.ddl-auto=none
spring.datasource.schema=classpath:/rewards/testdb/schema.sql

# Load the accounts only, no restaurant
spring.datasource.data=classpath:/data-no-restaurants.sql

# TO-DO-03: Expose some endpoints
# - Set appropriate property to expose beans and metrics endpoints
# - Let the application restart (via Spring Boot devtools) and access
#   beans and metrics endpoints again
# - The beans and metrics endpoints should work now
# - Try a metric: http://localhost:8080/actuator/metrics/jvm.memory.max
# - But what about info & health endpoints?

# TO-DO-04: Expose all endpoints
# - Set appropriate property to expose all endpoints
# - Let the application restart (via Spring Boot devtools) and
#   verify that all endpoints now work
# - Access some metrics such as following:
#
#   http://localhost:8080/actuator/beans
#   http://localhost:8080/actuator/health
#   http://localhost:8080/actuator/info
#   http://localhost:8080/actuator/mappings
#   http://localhost:8080/actuator/metrics/jvm.memory.max
#
#   http://localhost:8080/actuator/metrics/http.server.requests
#   http://localhost:8080/actuator/metrics/http.server.requests?tag=method:GET
#   http://localhost:8080/actuator/metrics/http.server.requests?tag=uri:/actuator/beans
#
#   http://localhost:8080/notexistent
#   http://localhost:8080/actuator/metrics/http.server.requests?tag=status:404


# TO-DO-14: Display details of the health endpoint
# - Set appropriate property to enable more details of the health endpoint
# - Let the application restart (via Spring Boot devtools), verify
#   detailed health info gets displayed
